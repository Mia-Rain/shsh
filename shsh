#!/bin/sh
nl='
'
shcat() {
  while IFS= read -r p || [ "$p" ]; do
    printf '%s' "$p$nl"
  done
}
case "$1" in
  "") in="$(shcat <&0)";;
  *) in="$(shcat <"$1")"
esac

## Read the `shsh.conf` file, if it exists.
for d in $PWD ${XDG_CONFIG_HOME:-$HOME/.config}/shsh /usr/local/etc/shsh /etc/shsh # current list of possible locations
do
    if [ -d "${d}" ] && [ -f "${d}/shsh.conf" ]
    then
        . ${d}/shsh.conf
        break # reads the first one found
    else continue
    fi
done

## Setting the submod paths to user-configured ones, otherwise defaulting to the defaults.
## Math:
modpaths="${user_modpaths:-$PWD}"    # folder where submods can be found
pshrng_DIR="${user_pshrng_DIR:-rng}" # name of the psh-prng folder
pshfc_DIR="${user_pshfc_DIR:-com}"   # name of the psh-fc folder
pshfr_DIR="${user_pshfr_DIR:-math}"  # name of the psh-fractional folder
pshfrPATH="${user_pshfrPATH:-${modpaths}/math}" # needed by psh-rpn
fcwrPATH="${user_fcwrPATH:-${modpaths}/mwrap}"
export pshfrPATH # only pshfrPATH is needed outside currently

## Data Structures:
shlibarray_DIR="${user_shlibarray_DIR:-array}" # name of the sh-libarray folder
shlibdict_DIR="${user_shlibdict_DIR:-dict}"    # name of the sh-libdict folder

while IFS= read -r p || [ "$p" ]; do
  IFS=" "; for i in $p; do
    #echo "-- $i ?" >&2
    case "$i" in
      '#') : ;;
      '[') FC=0;;
      ']') unset FC; FCdat="${FCdat+$FCdat } ]";;
      *'=$(['*|*'="$(['*) FR=0; FRdat="${i#${i%%[*}[}"; continue ;;
      *'])'*) FRdat="${FRdat+$FRdat }${i%%])*}"; unset FR
    esac
    ## psh-fc
    [ "$FC" ] && {
      [ "$i" = '[' ] && continue
      FCdat="${FCdat+$FCdat }$i"
    }
    [ ! "$FC" -a "$FCdat" ] && {
      unset IFS; [ "$FCdat" ] && {
        p="${modpaths}/${pshfc_DIR}/com $p"
      }
    } && unset FCdat
    ## psh-fractional
    [ "$FR" ] && {
      FRdat="${FRdat+$FRdat }$i"
      #echo "| $i -- $FRdat" >&2
    }
    [ ! "$FR" -a "$FRdat" != "" ] && {
      IFS=" "; set -- $FRdat; for n in "$@"; do
        if [ ! -z "${n##*.*}" ] && ! printf %d "$n" >/dev/null 2>/dev/null && (eval i=\${$n}) 2>/dev/null; then
          ex=${n}
        fi
      done
      unset IFS
      [ "$ex" ] && ex="${ex}=\$${ex}"
      p="${p%(\[$FRdat])*}(${fcwrPATH}/cal $FRdat)${p##*$FRdat\])}"
      unset FRdat FR ex
    }
  done
  printf '%s' "$p$nl"
done << EOF
$in
EOF
